{"ast":null,"code":"import _message from \"antd/lib/message\";\nvar _jsxFileName = \"/Users/moki/GithubProject/Hotel_NextJs/context/AuthProvider.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport { Login } from \"../pages/api/LogIn_LoginUp/index\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nconst fakeUserData = {\n  id: 1,\n  name: 'Jhon Doe',\n  avatar: 'http://s3.amazonaws.com/redqteam.com/isomorphic-reloaded-image/profilepic.png',\n  roles: ['USER', 'ADMIN']\n};\n\nconst AuthProvider = props => {\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n  const {\n    0: user,\n    1: setUser\n  } = useState({});\n\n  const signIn = params => {\n    console.log(params, 'signInparams'); // console.log(params, 'sign in form Props');\n    // setUser(fakeUserData);\n    // setLoggedIn(true);\n    // Router.push(`/`);\n  };\n\n  const signUp = params => {\n    console.log(params, 'sign up form Props'); // setUser(fakeUserData);\n    // setLoggedIn(true);\n    // Login(params)\n\n    Login(params).then(res => {\n      if ((res === null || res === void 0 ? void 0 : res.code) === 200) {\n        _message.success('登陆成功');\n\n        Router.push(`/`);\n      }\n    });\n  };\n\n  const logOut = () => {\n    setUser(null);\n    setLoggedIn(false);\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      loggedIn,\n      logOut,\n      signIn,\n      signUp,\n      user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, props.children));\n};\n\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/moki/GithubProject/Hotel_NextJs/context/AuthProvider.js"],"names":["React","useState","Router","Login","AuthContext","createContext","fakeUserData","id","name","avatar","roles","AuthProvider","props","loggedIn","setLoggedIn","user","setUser","signIn","params","console","log","signUp","then","res","code","success","push","logOut","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,KAAT;AAGA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,IAAI,EAAE,UAFa;AAGnBC,EAAAA,MAAM,EACJ,+EAJiB;AAKnBC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT;AALY,CAArB;;AAQA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACc,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMgB,MAAM,GAAIC,MAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,cAApB,EADyB,CAEzB;AACA;AACA;AACA;AACD,GAND;;AAQA,QAAMG,MAAM,GAAIH,MAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,oBAApB,EADyB,CAEzB;AACA;AACA;;AACAf,IAAAA,KAAK,CAACe,MAAD,CAAL,CACGI,IADH,CACSC,GAAD,IAAU;AACd,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,IAAL,MAAc,GAAlB,EAAuB;AACrB,iBAAQC,OAAR,CAAgB,MAAhB;;AACAvB,QAAAA,MAAM,CAACwB,IAAP,CAAa,GAAb;AACD;AACF,KANH;AAOD,GAZD;;AAcA,QAAMC,MAAM,GAAG,MAAM;AACnBX,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,QADK;AAELc,MAAAA,MAFK;AAGLV,MAAAA,MAHK;AAILI,MAAAA,MAJK;AAKLN,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,4BAAGH,KAAK,CAACgB,QAAT,CATF,CADF;AAaD,CA5CD;;AA8CA,eAAejB,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport Router from 'next/router';\nimport { Login } from '../pages/api/LogIn_LoginUp/index'\nimport { message } from 'antd'\n\nexport const AuthContext = React.createContext();\n\nconst fakeUserData = {\n  id: 1,\n  name: 'Jhon Doe',\n  avatar:\n    'http://s3.amazonaws.com/redqteam.com/isomorphic-reloaded-image/profilepic.png',\n  roles: ['USER', 'ADMIN'],\n};\n\nconst AuthProvider = (props) => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState({});\n\n  const signIn = (params) => {\n    console.log(params, 'signInparams')\n    // console.log(params, 'sign in form Props');\n    // setUser(fakeUserData);\n    // setLoggedIn(true);\n    // Router.push(`/`);\n  };\n\n  const signUp = (params) => {\n    console.log(params, 'sign up form Props');\n    // setUser(fakeUserData);\n    // setLoggedIn(true);\n    // Login(params)\n    Login(params)\n      .then((res) =>  {\n        if (res?.code === 200) {\n          message.success('登陆成功')\n          Router.push(`/`);\n        }\n      })\n  };\n\n  const logOut = () => {\n    setUser(null);\n    setLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        loggedIn,\n        logOut,\n        signIn,\n        signUp,\n        user,\n      }}\n    >\n      <>{props.children}</>\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}