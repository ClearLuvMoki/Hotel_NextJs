{"ast":null,"code":"import _message from \"antd/lib/message\";\nimport axios from 'axios';\nexport const baseURL = true ? '/api' : 'https://www.hotelavish.com/api';\n/**\n * 创建实例 并设置默认超时时间 ms\n */\n\nconst service = axios.create({\n  timeout: 100000,\n  //默认10秒\n  baseURL: baseURL\n});\n/**\n * 请求拦截器\n */\n\nservice.interceptors.request.use(config => {\n  return config;\n}, error => {\n  Promise.reject(error);\n});\n/**\n * 响应拦截器\n */\n\nservice.interceptors.response.use(response => {\n  var _response$data;\n\n  if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.code) !== 200) {\n    var _response$data2;\n\n    _message.error((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.msg);\n  }\n\n  return response.data;\n}, error => {\n  _message.error(error);\n\n  return Promise.reject(error);\n}); // axios的get请求\n\nexport function getAxios({\n  url,\n  params = {}\n}) {\n  return new Promise((resolve, reject) => {\n    service.get(url, {\n      params\n    }).then(res => {\n      resolve(res.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n} // axios的post请求\n\nexport function postAxios({\n  url,\n  data\n}) {\n  return new Promise((resolve, reject) => {\n    service({\n      url,\n      data,\n      method: 'post'\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}\nexport default axios;","map":{"version":3,"sources":["/Users/moki/GithubProject/Hotel_NextJs/untils/server.js"],"names":["axios","baseURL","service","create","timeout","interceptors","request","use","config","error","Promise","reject","response","data","code","msg","getAxios","url","params","resolve","get","then","res","catch","err","postAxios","method"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,OAAO,GAAG,OAAyC,MAAzC,GAAiD,gCAAjE;AAIP;AACA;AACA;;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,MADgB;AACR;AACjBH,EAAAA,OAAO,EAACA;AAFiB,CAAb,CAAhB;AAKA;AACA;AACA;;AACAC,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACIC,MAAM,IAAI;AACN,SAAOA,MAAP;AACH,CAHL,EAIIC,KAAK,IAAI;AACLC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CANL;AASA;AACA;AACA;;AACAP,OAAO,CAACG,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CACKK,QAAD,IAAc;AAAA;;AACV,MAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,8BAAAA,QAAQ,CAAEC,IAAV,kEAAgBC,IAAhB,MAAyB,GAA7B,EAAkC;AAAA;;AAC9B,aAAQL,KAAR,oBAAcG,QAAQ,CAACC,IAAvB,oDAAc,gBAAeE,GAA7B;AACH;;AACD,SAAOH,QAAQ,CAACC,IAAhB;AACH,CANL,EAMQJ,KAAD,IAAW;AACV,WAAQA,KAAR,CAAcA,KAAd;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CATL,E,CAaA;;AACA,OAAO,SAASO,QAAT,CAAkB;AACrBC,EAAAA,GADqB;AAErBC,EAAAA,MAAM,GAAC;AAFc,CAAlB,EAGJ;AACC,SAAO,IAAIR,OAAJ,CAAY,CAACS,OAAD,EAAUR,MAAV,KAAqB;AACpCT,IAAAA,OAAO,CAACkB,GAAR,CAAYH,GAAZ,EAAiB;AACbC,MAAAA;AADa,KAAjB,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXH,MAAAA,OAAO,CAACG,GAAG,CAACT,IAAL,CAAP;AACH,KAJD,EAIGU,KAJH,CAISC,GAAG,IAAI;AACZb,MAAAA,MAAM,CAACa,GAAD,CAAN;AACH,KAND;AAOH,GARM,CAAP;AASH,C,CAED;;AACA,OAAO,SAASC,SAAT,CAAmB;AACtBR,EAAAA,GADsB;AAEtBJ,EAAAA;AAFsB,CAAnB,EAGJ;AACC,SAAO,IAAIH,OAAJ,CAAY,CAACS,OAAD,EAAUR,MAAV,KAAqB;AACpCT,IAAAA,OAAO,CAAC;AACJe,MAAAA,GADI;AAEJJ,MAAAA,IAFI;AAGJa,MAAAA,MAAM,EAAE;AAHJ,KAAD,CAAP,CAIGL,IAJH,CAIQC,GAAG,IAAI;AACXH,MAAAA,OAAO,CAACG,GAAD,CAAP;AACH,KAND,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZb,MAAAA,MAAM,CAACa,GAAD,CAAN;AACH,KARD;AASH,GAVM,CAAP;AAWH;AAED,eAAexB,KAAf","sourcesContent":["import axios from 'axios'\nimport { message } from 'antd'\n\nexport const baseURL = process.env.NODE_ENV === 'development' ? '/api': 'https://www.hotelavish.com/api'\n\n\n\n/**\n * 创建实例 并设置默认超时时间 ms\n */\nconst service = axios.create({\n    timeout: 100000, //默认10秒\n    baseURL:baseURL\n})\n\n/**\n * 请求拦截器\n */\nservice.interceptors.request.use(\n    config => {\n        return config\n    },\n    error => {\n        Promise.reject(error)\n    }\n)\n\n/**\n * 响应拦截器\n */\nservice.interceptors.response.use(\n    (response) => {\n        if (response?.data?.code !== 200) {\n            message.error(response.data?.msg)\n        }\n        return response.data\n    }, (error) => {\n        message.error(error)\n        return Promise.reject(error)\n    }\n)\n\n\n// axios的get请求\nexport function getAxios({\n    url,\n    params={}\n}) {\n    return new Promise((resolve, reject) => {\n        service.get(url, {\n            params,\n        }).then(res => {\n            resolve(res.data)\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}\n\n// axios的post请求\nexport function postAxios({\n    url,\n    data\n}) {\n    return new Promise((resolve, reject) => {\n        service({\n            url,\n            data,\n            method: 'post',\n        }).then(res => {\n            resolve(res)\n        }).catch(err => {\n            reject(err)\n        })\n    })\n}\n\nexport default axios\n"]},"metadata":{},"sourceType":"module"}